//variables to setup basic size and shape of the card pips
$card-width: 40vw;
$card-height: $card-width*1.4;
$font-size-number: $card-width*0.1;
$icon-size:$card-width/5;


//Step 7 Leveraging Sass Mixins
//Step 9  adding flexible with variables make the value 12.5% a variable
//Step 10 make variables with from where come 12.5%
$num-columns: 8;
// repeated before first @mixin -- $one-column: 100/ $num-columns;
//adding more variabless
$loop-start:1;
$loop-end:$num-columns+1; 


//add variable for 12.5% value
$one-column:12.5%;
@mixin col($span-num){
    flex: 0 0 $one-column*$span-num;
}
//Step9 adding flexible with the value 12.5% as variable
@mixin offset($offset-num){
    margin-left:$one-column *$offset-num;
}


*,
*:before,
*:after{
    box-sizing:border-box;
    margin:0;
    padding:0;
}
//styles to draw a basic outline of a card

.card {
    border: 1px solid grey;
    height:$card-height;
    width:$card-width;
    border-radius:10px;
    margin:20px;
    box-shadow: 2px 2px 4px grey;
}

//because it is a card front we want a bit of extra padding
.card-front {
    padding: .5em;
}

//set icon size
.icon {
    width: $icon-size;
    height:$icon-size;
}
.number {
    text-align: center;
    font-size: $font-size-number;
    //an icon that is part of a number should be half of normal size

    & > .icon{
        width: $icon-size *.5;
        height: $icon-size *.5;
    }
}
//rotate bottom pips 180deg
.rotate {
    transform: rotate(180deg);
}

//Step 1: Flex Container
.row {
    display: flex;
    flex-flow: row wrap;
    //step 6 alignment
    align-items: center;
    align-content: space-between;
    height: 100%;
}
.cell {
    flex:1;
    text-align: center;
}

//Step 2-3 how many columns - create columns with the division 100/8 = 12.5%
//Step 4 Create column classes and apply them to html div

//|.col-1 {
//--flex: 0 0 12.50%; -- change to @include
//@include col(1);
//}
//.col-2 {
//@include col(2);
//}
//.col-8 {
//@include col(8);
//}

//Step 8 Sass @for loops - making column classes
//appling variables in sloop start and end
@for $index from $loop-start to $loop-end {
    .col-#{$index} {
        @include col($index);
    }
}

//Step 5 Offsets = to wrap if the they exceed the space available on the row
//.offset-1 {
//@include offset(1);
//|}

//.offset-2 {
//@include offset(2);
//}

//step 8 sass @for loops - making offset classes
@for $index from $loop-start to $loop-end {
    .offset-#{$index} {
        @include offset($index);
    }
}

//Step 6 allignment - adding some properties to row div container up



